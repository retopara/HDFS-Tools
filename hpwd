#!/bin/bash

function usage () {
    echo "Current path"
    echo "Usage: $(basename $0) [options]"
    echo "       -r relative path only"
    echo "       -p name node only"
    echo "       -h display help"
    exit 2
}

RELATIVE=0
PREFIX=0

# process flags 
while getopts  "rph" flag
do
    #echo "$flag" $OPTIND $OPTARG
    ( [ "$flag" == "h" ] || [ "$flag" == ":" ] || [ "$flag" == "?" ] ) && { usage; };
    case "$flag" in
        r)
            RELATIVE=1;;
        p)
            PREFIX=1;;
        -)
            break;;
    esac
done
shift $(( OPTIND-1 )); OPTIND=1

# http://aplawrence.com/Unix/getopts.html
#    If an argument is not given for a flag that needs one, "$flag" gets set to
#    ":" and OPTARG has the misused flag. If an unknown argument is given, a
#    "?" is put in "$flag", and OPTARG again has the unrecognized flag.



# prefix only
[ "$PREFIX" -eq "1" ] && { pushd / 2>&1 > /dev/null; }; 

HDFS_PWD=${PWD#$HDFS_PREFIX}
HDFS_PWD=${HDFS_PWD#$PWD}
HDFS_PWD=${HDFS_PWD#/}

CORE_SITE_XML=$HADOOP_CONF_DIR/core-site.xml
CORE_SITE_KEY=fs.default.name
HDFS_NAME=$(grep -A 1 $CORE_SITE_KEY $CORE_SITE_XML | grep "<value>" | perl -p -i -e 's# *<value>(.*)</value> *$#${1}#')

# relative component only
[ "$RELATIVE" -eq "1" ] && { echo $HDFS_PWD; exit 0; };
echo $HDFS_NAME/$HDFS_PWD

# prefix only
[ "$PREFIX" -eq "1" ] && { popd 2>&1 > /dev/null; };

#
exit;
#


