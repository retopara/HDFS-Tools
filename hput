#!/bin/bash

# Get files or subtree from HDFS

HDFS_CMD="hdfs dfs"
HDFS_NAME=$(hpwd -p)

# default
VERBOSE=0;

function usage () {
    echo "Copy files or subtree to remote HDFS"
    echo "Usage: $(basename $0) [-vh] [relative-url-1] [...]"
    echo "       -v verbose"
    echo "       -h display help"
    exit 2
}


# process flags
ARGS=$(getopt vh $@)
[ $? -eq 0 ] || usage;
set -- $ARGS
for i
do
    case "$i"
    in
        -v)
            VERBOSE=1;
            shift;;
        -h)
            usage;;
        --)
            shift; break;;
    esac
done

# validate prefix
( [ -d $HDFS_PREFIX ] && [ -w $HDFS_PREFIX ] ) || { echo "$(basename $0) > HDFS_PREFIX directory does not exist, or is not writable"; exit 1; }

# remove HDFS_PREFIX from PWD to obtain path into remote HDFS
HDFS_PWD=$(hpwd -r)

[ $VERBOSE -eq 0 ] || ( echo "HDFS_PREFIX=$HDFS_PREFIX" )
[ $VERBOSE -eq 0 ] || ( echo "HDFS_PWD=$HDFS_PWD" )

function processurl () {

    [ $# -gt 0 ] || { echo "$(basename $0) > missing arg to processurl"; exit 1; }
    #
    HDFS_URL="$HDFS_PWD"/"$1"
    HDFS_URL=${HDFS_URL#/}
    HDFS_URL=${HDFS_URL#/}
    LOCAL_URL="$HDFS_PREFIX"/"$HDFS_URL"

    # does file exist on locally?
	[ -e $LOCAL_URL ] || { echo "$(basename $0) > Local file does not exist: $HDFS_URL"; exit; };

    [ $VERBOSE -eq 0 ] || ( echo "HDFS_URL=$HDFS_URL" )
    [ $VERBOSE -eq 0 ] || ( echo "LOCAL_URL=$LOCAL_URL" )

    # put file 
    $HDFS_CMD -put "$LOCAL_URL" "$HDFS_NAME"/"$HDFS_URL"

}



# either process current directory, or use commandline args as relative URLs
if [ $# -eq 0 ]; then
    #[ $VERBOSE -eq 0 ] || ( echo "$(basename $0) > Processing ./" )
    processurl "";
else
    # concatenate 
    for i
    do
        #[ $VERBOSE -eq 0 ] || ( echo "$(basename $0) > Processing ARG=$i" )
        processurl $i;
    done
fi


#
exit;
#
#


#    if [ $? -eq 1 ]; then
